name: build-resume-and-deploy
on:
  workflow_run:
    workflows: ["semantic-release"]
    types:
      - completed
jobs:
  build-poetry-container:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps: 
      - uses: actions/checkout@v3
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          tags: latest
          images: ghcr.io/${{ github.repository_owner }}/python-with-poetry
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: src/python/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  generate-adoc-with-github-files:
    runs-on: ubuntu-latest
    needs: build-poetry-container
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Run the build process with Docker
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/${{ github.repository_owner }}/python-with-poetry
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          options: -e GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} -v ${{ github.workspace }}/src/python:/app -v ${{ github.workspace }}/src/resources/data:/app/resources/data
          run: poetry install --no-interaction --no-ansi -vvvv && poetry run python main.py
      - name: Send generated files to cache
        uses: actions/upload-artifact@master
        with:
          name: src
          path: src
          
  create-html-files:
    runs-on: ubuntu-latest
    needs: generate-adoc-with-github-files
    container:
      image: asciidoctor/docker-asciidoctor
    steps:
      - name: Recover generated files from cache
        uses: actions/download-artifact@master
        with:
          name: src
          path: src
      - name: Create ptbr(default) resume version
        run: |
          asciidoctor -o ./output/index.html -a toc=left -a docinfo=shared src/resume-ptbr.adoc
      - name: Create en resume version
        run: |
          asciidoctor -o ./output/en/index.html -a toc=left -a docinfo=shared src/resume-en.adoc
      - name: Send generated output files to cache
        uses: actions/upload-artifact@master
        with:
          name: output
          path: output

  create-pdf-files:
    runs-on: ubuntu-latest
    needs: generate-adoc-with-github-files
    container:
      image: asciidoctor/docker-asciidoctor
    steps:
      - name: Recover generated files tofrom cache
        uses: actions/download-artifact@master
        with:
          name: src
          path: src 
      - name: Create ptbr(default) resume version
        run: | 
          asciidoctor-pdf -a allow-uri-read -a pdf-theme=src/resources/themes/default-theme.yml -a pdf-fontsdir=src/resources/fonts -o ./output/resume-raw.pdf src/resume-ptbr.adoc
      - name: Create en resume version
        run: | 
          asciidoctor-pdf -a allow-uri-read -a pdf-theme=src/resources/themes/default-theme.yml -a pdf-fontsdir=src/resources/fonts -o ./output/en/resume-raw.pdf src/resume-en.adoc
      - name: Create ptbr(default) condensed resume version
        run: | 
          asciidoctor-pdf -a with_activities=false -a allow-uri-read -a pdf-theme=src/resources/themes/default-theme.yml -a pdf-fontsdir=src/resources/fonts -o ./output/resume-condensed-raw.pdf src/resume-ptbr.adoc
      - name: Create en condensed resume version
        run: | 
          asciidoctor-pdf -a with_activities=false -a allow-uri-read -a pdf-theme=src/resources/themes/default-theme.yml -a pdf-fontsdir=src/resources/fonts -o ./output/en/resume-condensed-raw.pdf src/resume-en.adoc
      - name: Send generated output files to cache
        uses: actions/upload-artifact@master
        with:
          name: output
          path: output

  optimize-pdf:
    runs-on: ubuntu-latest
    needs: create-pdf-files
    steps:
      - name: Recover generated files from cache
        uses: actions/download-artifact@master
        with:
          name: output
          path: output
      - name: Compress ptbr(dafault) version PDF
        uses: jy95/ghostscript-action@v1  
        with:  
          file: 'output/resume-raw.pdf'
          output: 'output/resume.pdf'
          arbitrary-parameters: '-sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/screen -dPrinted=false -dNOPAUSE -dQUIET -dBATCH'
      - name: Compress ptbr(dafault) consensed version PDF
        uses: jy95/ghostscript-action@v1  
        with:  
          file: 'output/resume-condensed-raw.pdf'
          output: 'output/resume-condensed.pdf'
          arbitrary-parameters: '-sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/screen -dPrinted=false -dNOPAUSE -dQUIET -dBATCH'
      - name: Compress english version PDF
        uses: jy95/ghostscript-action@v1  
        with:  
          file: 'output/en/resume-raw.pdf'
          output: 'output/en/resume.pdf'
          arbitrary-parameters: '-sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/screen -dPrinted=false -dNOPAUSE -dQUIET -dBATCH'
      - name: Compress en consensed version PDF
        uses: jy95/ghostscript-action@v1  
        with:  
          file: 'output/en/resume-condensed-raw.pdf'
          output: 'output/en/resume-condensed.pdf'
          arbitrary-parameters: '-sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/screen -dPrinted=false -dNOPAUSE -dQUIET -dBATCH'
      - name: Send generated output files to cache
        uses: actions/upload-artifact@master
        with:
          name: output
          path: output

  publish-to-github-pages:
    runs-on: ubuntu-latest
    needs:
      - create-html-files
      - optimize-pdf 
    steps:
      - name: Recover generated files from cache
        uses: actions/download-artifact@master
        with:
          name: output
          path: output
      - name: Remove transient PDF version
        run: rm output/resume-raw.pdf output/en/resume-raw.pdf ./output/resume-condensed-raw.pdf ./output/en/resume-condensed-raw.pdf
      - name: Create CNAME file
        run: echo 'me.fabioluciano.dev' > ./output/CNAME
      - name: Deploy to github pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./output
